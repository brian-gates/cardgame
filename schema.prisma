generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Card {
  id         String       @id @unique @default(cuid())
  templateId CardTemplate
  owner      Player?      @relation(name: "deck", fields: [ownerId], references: [id])
  ownerId    String?
  location   CardLocation
}

enum CardLocation {
  hand
  draw
  discard
  exhaust
}

model Player {
  id         String     @id @unique @default(cuid())
  email      String     @unique
  health     Int        @default(10)
  maxHealth  Int        @default(10)
  armor      Int        @default(0)
  deck       Card[]     @relation(name: "deck")
  lastActive DateTime   @default(now())
  encounter  Encounter?

  @@index([email])
}

model Encounter {
  id       String  @id @unique @default(cuid())
  enemies  Enemy[]
  player   Player  @relation(fields: [playerId], references: [id])
  playerId String  @unique
}

model Enemy {
  id          String        @id @unique @default(cuid())
  templateId  EnemyTemplate
  health      Int           @default(10)
  armor       Int           @default(0)
  Encounter   Encounter?    @relation(fields: [encounterId], references: [id])
  encounterId String?
}

enum EnemyTemplate {
  slime

  @@map("EnemyId")
}

enum CardTemplate {
  bash
  strike
  defend

  @@map("CardId")
}
